% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy.R
\name{LDA}
\alias{LDA}
\alias{LDA.data.frame}
\alias{LDA.matrix}
\alias{LDA.formula}
\title{Linear Discriminant Analysis}
\usage{
LDA(X, ...)

\method{LDA}{data.frame}(X, y, lambda = 0.1, ...)

\method{LDA}{matrix}(X, y, lambda = 0.1, ...)

\method{LDA}{formula}(formula, data, lambda = 0.1, ...)
}
\arguments{
\item{X}{matrix or data.frame, where each row is a sample and each column is a feature.}

\item{...}{further arguments passed to or from other methods}

\item{y}{a vector of class labels with length equal to the number of rows in X. If X is a data.frame,
y can also be an index (integer) or name (character) of the column to be used as labels.}

\item{lambda}{regularization parameter. Higher values lead to less overfitting and the cost of poorer separation between the classes. (Default: 0.1)}

\item{formula}{an alternative way to specify the LDA model. See below for examples.}

\item{data}{a data.frame associated with the formula-based model specification.}
}
\value{
An object of class LDA that contains variance quotients in $d and LDA component loadings in $v. See \code{tidy.LDA}, \code{glance.LDA} and \code{augment.LDA} for tidy downstream usage of the LDA object.
}
\description{
Linear Discriminant Analysis finds directions in high-dimensional space that maximize the ratio of
  inter-class variance / within-class variance.
}
\section{Methods (by class)}{
\itemize{
\item \code{data.frame}: accepts a data.frame and column index / name, or an external labels vector

\item \code{matrix}: accepts a matrix and an external labels vector

\item \code{formula}: accepts a formula and the corresponding data.frame
}}

\examples{
## All of the following are equivalent ways to train an LDA model on the built-in iris dataset
model1 <- LDA( iris, "Species" )
model2 <- LDA( iris, 5 )
model3 <- LDA( iris[,1:4], iris[,5] )
model4 <- LDA( as.matrix( iris[,1:4] ), iris[,5] )
model5 <- LDA( Species ~ ., iris )
model6 <- LDA( Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, iris )
}
